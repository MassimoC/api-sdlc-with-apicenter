parameters:
  # Pipeline-related parameters
  poolName: '$(poolName)'
  vmImage: '$(vmImage)'
  defaultJobTimeoutInMinutes: 120
  serviceConnection: '$(serviceConnection)'
  # Logic-related parameters
  rg: 'rg-apicenter'
  apicName: 'myapicatalog'
  apiName: ''
  releaseDate: ''
  apiVersion: ''
  environmentCode : ''
  environmentId: 'dev001xyz'
  lifecycleStage: 'development'

##---------------------------------------------##
## TEMPLATE LOGIC                              ##
##---------------------------------------------##
jobs:
  - deployment: ${{ parameters.environmentCode }}
    displayName: 'Deploy to ${{ parameters.environmentCode }} on ${{ parameters.environmentId }}'
    environment: ${{ parameters.environmentCode }}
    timeoutInMinutes: ${{ parameters.defaultJobTimeoutInMinutes }}
    pool:
      ${{ if ne(parameters.vmImage, '') }}:
        vmImage: ${{ parameters.vmImage }}
      ${{ if ne(parameters.poolName, '') }}:
        name: ${{ parameters.poolName }}
    strategy:
      runOnce:
        deploy:         
          steps:
            - checkout: self
            
            - task: AzureCLI@2  
              displayName: Debug
              inputs:
                azureSubscription: ${{ parameters.serviceConnection }}
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  echo "... API version"
                  echo ${{ parameters.apiVersion }}

            - task: AzureCLI@2  
              displayName: APIC - Register deployment
              inputs:
                azureSubscription: ${{ parameters.serviceConnection }}
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  echo "------------DEPLOYMENT------------"
                  $deploymentName="${{ parameters.environmentCode }}-${{ parameters.releaseDate }}"
                  $environmentResource="/workspaces/default/environments/${{ parameters.environmentId }}"
                  $definitionResource="/workspaces/default/apis/${{ parameters.apiName }}/versions/${{ parameters.apiVersion }}/definitions/xdef006"
                  echo "... deploymentName"
                  echo $deploymentName
                  echo "... environmentResource"
                  echo $environmentResource
                  echo "... definitionResource"
                  echo $definitionResource
                  echo "------------EXECUTE------------"
                  echo "... Executing command :"
                  echo "az apic api deployment create -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --name $deploymentName  --title $(deploymentName) --description $(deploymentName) --api ${{ parameters.apiName }} --environment-id '$environmentResource' --definition-id '$definitionResource' --server runtime-uri[0]='https://kube.it'"
                  az apic api deployment create -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --name $deploymentName  --title $deploymentName --description $deploymentName --api "${{ parameters.apiName }}" --environment-id "$environmentResource" --definition-id "$definitionResource" --server runtime-uri[0]="https://kube.it"

            - task: AzureCLI@2  
              displayName: APIC - Lifecycle
              inputs:
                azureSubscription: ${{ parameters.serviceConnection }}
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  echo "------------UPDATE-LIFECYCLE------------"
                  az apic api version update -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --api-name ${{ parameters.apiName }} --name ${{ parameters.apiVersion }}  --lifecycle-stage ${{ parameters.lifecycleStage }} -w default
