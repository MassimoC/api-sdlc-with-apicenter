parameters:
  # Pipeline-related parameters
  poolName: '$(poolName)'
  vmImage: '$(vmImage)'
  defaultJobTimeoutInMinutes: 120
  # Logic-related parameters
  openApiFilePath: '$(openApiFullPath)'
  rulesetPath: '$(spectralRulesPath)'
  lintResult: '$(lintResult)'
  failSeverity: 'warn'

##---------------------------------------------##
## TEMPLATE LOGIC                              ##
##---------------------------------------------##
jobs:
  - job:
    displayName: Run Spectral validation
    timeoutInMinutes: ${{ parameters.defaultJobTimeoutInMinutes }}
    pool:
      ${{ if ne(parameters.vmImage, '') }}:
        vmImage: ${{ parameters.vmImage }}
      ${{ if ne(parameters.poolName, '') }}:
        name: ${{ parameters.poolName }}
    steps:
      - checkout: self

      - script: cat ${{ parameters.rulesetPath }}
        continueOnError: true
        displayName: 'Show OpenAPI rules'

      - script: cat ${{ parameters.openApiFilePath }}
        continueOnError: true
        displayName: 'Show OpenAPI spec'

      - script: sudo npm install -g @stoplight/spectral
        displayName: 'Install Linting Tool (stoplight/spectral)'

      - script: spectral lint "${{ parameters.openApiFilePath }}" --ruleset "${{ parameters.rulesetPath }}" --fail-severity "${{ parameters.failSeverity }}" --output "${{ parameters.lintResult }}" --format junit
        displayName: 'Lint OpenAPI specs'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '${{ parameters.lintResult }}'
          failTaskOnFailedTests: true
          testRunTitle: 'Spectral Linting Results'
        displayName: 'Publish Test Results'