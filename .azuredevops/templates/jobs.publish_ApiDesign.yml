parameters:
  # Pipeline-related parameters
  poolName: '$(poolName)'
  vmImage: '$(vmImage)'
  defaultJobTimeoutInMinutes: 120
  serviceConnection: '$(serviceConnection)'
  # Logic-related parameters
  spectralRulesFullPath: '$(spectralRulesFullPath)'
  failSeverity: 'warn'
  openApiFilePath: '$(openApiFullPath)'
  # APIC parameters
  rg: 'rg-apicenter'
  apicName: 'myapicatalog'
  apiName: ''
  apiTitle: ''
  apiDescription: ''
  currentApiVersion: ''

##---------------------------------------------##
## TEMPLATE LOGIC                              ##
##---------------------------------------------##
jobs:
  - job:
    displayName: Azure API Center
    timeoutInMinutes: ${{ parameters.defaultJobTimeoutInMinutes }}
    pool:
      ${{ if ne(parameters.vmImage, '') }}:
        vmImage: ${{ parameters.vmImage }}
      ${{ if ne(parameters.poolName, '') }}:
        name: ${{ parameters.poolName }}
    steps:
      - checkout: self
      
      - task: AzureCLI@2  
        displayName: Debug
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            echo "... Open API Path"
            cat ${{ parameters.openApiFilePath }}
            echo ""
            echo "... API version"
            echo ${{ parameters.currentApiVersion }}


      - task: AzureCLI@2
        displayName: 'JQ'
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: 'bash'
          scriptLocation: inlineScript
          inlineScript: |
            sudo apt --assume-yes install jq
            echo '##vso[task.setvariable variable=openApiContent]$( jq -c . ${{ parameters.openApiFilePath }} )'

      - bash: |
          echo "use macro syntax to read variables: $(openApiContent)"

      - task: AzureCLI@2  
        displayName: APIC - api list
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az apic api list -g ${{ parameters.rg }} -s ${{ parameters.apicName }}

      - task: AzureCLI@2  
        displayName: APIC - api create
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az apic api create -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --name ${{ parameters.apiName }} --title ${{ parameters.apiTitle }}  --kind rest --description ${{ parameters.apiDescription }}  --summary ${{ parameters.apiDescription }} 

      - task: AzureCLI@2  
        displayName: APIC - api version create
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az apic api version create -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --api-name ${{ parameters.apiName }} --name ${{ parameters.currentApiVersion }} --title "${{ parameters.currentApiVersion }}"

      - task: AzureCLI@2  
        displayName: APIC - api import specification
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            echo "... Executing command :"
            echo "az apic api definition create -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --api-name ${{ parameters.apiName }} --version ${{ parameters.currentApiVersion }} --name 'xdef006' --title 'OpenAPI xdef006'"
            echo ""
            az apic api definition create -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --api-name ${{ parameters.apiName }} --version ${{ parameters.currentApiVersion }} --name "xdef006" --title "OpenAPI xdef006"
            echo "------------------------------------"
            echo ""
            echo "... Executing command :"
            echo "az apic api definition import-specification -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --api-name ${{ parameters.apiName }} --version-name ${{ parameters.currentApiVersion }} --definition-name "xdef006" --format "inline" --value '$(openApiContent)' --specification '{"name":"openapi","version":"3.0.1"}'"
            echo ""
            az apic api definition import-specification -g ${{ parameters.rg }} -s ${{ parameters.apicName }} --api-name ${{ parameters.apiName }} --version-name ${{ parameters.currentApiVersion }} --definition-name "xdef006" --format "inline" --value '$(openApiContent)' --specification '{"name":"openapi","version":"3.0.1"}'
