parameters:
- name: fullImageName
  displayName: Image Name (Full)
  type: string
- name: trivyVersion
  displayName: Trivy Version
  type: string
  default: '0.19.2'

steps:
- script: |
    sudo apt-get install rpm
    wget https://github.com/aquasecurity/trivy/releases/download/v${{ parameters.trivyVersion }}/trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb
    sudo dpkg -i trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb
    trivy -v
  displayName: 'Download & Install Trivy'

- script: |
    trivy image --exit-code 0 --severity MEDIUM,HIGH --format template --template "@build/utilities/trivy/templates/junit.tpl" -o junit-report-low-med.xml --ignore-unfixed ${{ parameters.fullImageName }}
  displayName: Scan container image for Low & Medium vulnerabilities
    
- script: |
    trivy image --exit-code 1 --severity CRITICAL --ignore-unfixed --format template --template "@build/utilities/trivy/templates/junit.tpl" -o junit-report-high-crit.xml ${{ parameters.fullImageName }}
  displayName: Scan container image for High & Critical vulnerabilities

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-report-low-med.xml'
    mergeTestResults: true
    failTaskOnFailedTests: false
    testRunTitle: 'Publish Low & Medium Image Vulnerabilities'
  displayName: Publish container image for Low & Medium vulnerabilities
  condition: 'always()'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-report-high-crit.xml'
    mergeTestResults: true
    failTaskOnFailedTests: true
    testRunTitle: 'Publish High & Critical Image Vulnerabilities'
  displayName: Publish container image for High & Critical vulnerabilities
  condition: 'always()'