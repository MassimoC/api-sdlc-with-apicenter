{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Reply_with_an_adaptive_card_in_a_channel": {
                        "inputs": {
                            "body": {
                                "messageBody": "    {\n        \"type\": \"AdaptiveCard\",\n        \"body\": [\n            {\n                \"type\": \"ColumnSet\",\n                \"columns\": [\n                    {\n                        \"type\": \"Column\",\n                        \"items\": [\n                            {\n                                \"type\": \"Image\",\n                                \"style\": \"Person\",\n                                \"url\": \"https://github.com/MassimoC/apimhotrod/blob/main/imgs/security.png?raw=true\",\n                                \"size\": \"Small\"\n                            }\n                        ],\n                        \"width\": \"auto\"\n                    },\n                    {\n                        \"type\": \"Column\",\n                        \"items\": [\n                            {\n                                \"type\": \"TextBlock\",\n                                \"weight\": \"Bolder\",\n                                \"text\": \"Security checks : mandatory \",\n                                \"wrap\": true\n                            },\n                            {\n                                \"type\": \"TextBlock\",\n                                \"spacing\": \"None\",\n                                \"text\": \"@{variables('eventTime')}\",\n                                \"isSubtle\": true,\n                                \"wrap\": true\n                            }\n                        ],\n                        \"width\": \"stretch\"\n                    }\n                ]\n            },\t\t\n            {\n                \"type\": \"Container\",\n                \"items\": [\n                    {\n                        \"type\": \"TextBlock\",\n                        \"text\": \"This API has been categorized SEC012\",\n                        \"wrap\": true\n                    },\n                    {\n                        \"type\": \"FactSet\",\n                        \"facts\": [\n                            {\n                                \"title\": \"API Id:\",\n                                \"value\": \"@{variables('apiId')}\"\n                            },\n                            {\n                                \"title\": \"Version Id:\",\n                                \"value\": \"@{variables('versionId')}\"\n                            },\n                            {\n                                \"title\": \"EventType:\",\n                                \"value\": \"Manual action required\"\n                            },\n                            {\n                                \"title\": \"Compliant:\",\n                                \"value\": \"Yes\"\n                            },\n                            {\n                                \"title\": \"Assigned to:\",\n                                \"value\": \"@{variables('initReviewer')}\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"type\": \"ColumnSet\",\n                \"columns\": 2\n            }\n        ],\n        \"actions\": [\n            {\n                \"type\": \"Action.OpenUrl\",\n                \"title\": \"Run the security stage\",\n                \"url\": \"https://dev.azure.com/massimocrippa/ApiCenter/_build/results?buildId=853&view=results\"\n            }\n        ],\n        \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n        \"version\": \"1.0\"\n    }\n\n",
                                "parentMessageId": "1720901163671",
                                "recipient": {
                                    "channelId": "19:6cab104799074cd68b9fb514fa5d11a0@thread.tacv2",
                                    "groupId": "c72c6377-e016-4699-b5d2-b850777ab088"
                                }
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['teams']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/v1.0/teams/conversation/replyWithAdaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                        },
                        "type": "ApiConnection"
                    }
                },
                "else": {
                    "actions": {}
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@variables('initReviewer')",
                                "@variables('initReviewer')"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "HTTP": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "HTTP": {
                "inputs": {
                    "method": "GET",
                    "uri": "https://prod-19.westeurope.logic.azure.com:443/workflows/eb9826a4423b42e79a947e91fbc006c9/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=l3y0dcRJYcpcoW2wgBl_0clEUGzKJrpzvSlH6VMk8Og&reviewer=@{variables('initReviewer')}&apiId=@{variables('apiId')}&versionId=@{variables('versionId')}"
                },
                "runAfter": {
                    "init_ReviewerName": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                },
                "type": "Http"
            },
            "Init_versionId": {
                "inputs": {
                    "variables": [
                        {
                            "name": "versionId",
                            "type": "string",
                            "value": "@{substring(triggerBody()?['subject'],add(indexOf(triggerBody()?['subject'], '/versions/') , 10),sub(indexOf(triggerBody()?['subject'], '/definitions/'),add(indexOf(triggerBody()?['subject'], '/versions/'), 10)))}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_apiId": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_apiId": {
                "inputs": {
                    "variables": [
                        {
                            "name": "apiId",
                            "type": "string",
                            "value": "@{substring(triggerBody()?['subject'],add(indexOf(triggerBody()?['subject'], '/apis/') , 6),sub(lastIndexOf(triggerBody()?['subject'], '/versions/'), add(indexOf(triggerBody()?['subject'], '/apis/') , 6)))\r\n}"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_eventTime": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_eventTime": {
                "inputs": {
                    "variables": [
                        {
                            "name": "eventTime",
                            "type": "string",
                            "value": "@triggerBody()?['eventTime']"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "eventType",
                            "type": "string",
                            "value": "@triggerBody()?['eventType']"
                        }
                    ]
                },
                "runAfter": {
                    "Init_versionId": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@body('Post_adaptive_card_and_wait_for_a_response')",
                    "schema": {
                        "properties": {
                            "data": {
                                "properties": {
                                    "apiId": {
                                        "type": "string"
                                    },
                                    "reviewerName": {
                                        "type": "string"
                                    },
                                    "versionId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "messageId": {
                                "type": "string"
                            },
                            "messageLink": {
                                "type": "string"
                            },
                            "responder": {
                                "properties": {
                                    "displayName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "objectId": {
                                        "type": "string"
                                    },
                                    "tenantId": {
                                        "type": "string"
                                    },
                                    "userPrincipalName": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "responseTime": {
                                "type": "string"
                            },
                            "submitActionId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Post_adaptive_card_and_wait_for_a_response": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Post_adaptive_card_and_wait_for_a_response": {
                "inputs": {
                    "body": {
                        "body": {
                            "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"body\": [\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"Image\",\n                            \"style\": \"Person\",\n                            \"url\": \"https://github.com/MassimoC/apimhotrod/blob/main/imgs/apicenter.png?raw=true\",\n                            \"size\": \"Small\"\n                        }\n                    ],\n                    \"width\": \"auto\"\n                },\n                {\n                    \"type\": \"Column\",\n                    \"items\": [\n                        {\n                            \"type\": \"TextBlock\",\n                            \"weight\": \"Bolder\",\n                            \"text\": \"NEW API defition uploaded\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"spacing\": \"None\",\n                            \"text\": \"@{variables('eventTime')}\",\n                            \"isSubtle\": true,\n                            \"wrap\": true\n                        }\n                    ],\n                    \"width\": \"stretch\"\n                }\n            ]\n        },\t\t\n        {\n            \"type\": \"Container\",\n            \"items\": [\n                {\n                    \"type\": \"TextBlock\",\n                    \"text\": \"Please validate compliancy and assign to a reviewer\",\n                    \"wrap\": true\n                },\n                {\n                    \"type\": \"FactSet\",\n                    \"facts\": [\n                        {\n                            \"title\": \"API Id:\",\n                            \"value\": \"@{variables('apiId')}\"\n                        },\n                        {\n                            \"title\": \"Version Id:\",\n                            \"value\": \"@{variables('versionId')}\"\n                        },\n                        {\n                            \"title\": \"EventType:\",\n                            \"value\": \"@{variables('eventType')}\"\n                        },\n                        {\n                            \"title\": \"Compliance Status:\",\n                            \"value\": \"N/A\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": 2\n        }\n    ],\n    \"actions\": [\n        {\n            \"type\": \"Action.ShowCard\",\n            \"title\": \"Compliancy details\",\n            \"card\": {\n                \"type\": \"AdaptiveCard\",\n                \"style\": \"emphasis\",\n                \"body\": [\n                    {\n                        \"type\": \"Container\",\n                        \"items\": [\n                            {\n                                \"type\": \"FactSet\",\n                                \"facts\": [\n                                    {\n                                        \"title\": \"Compliancy\",\n                                        \"value\": \"Spectral\"\n                                    },\n                                    {\n                                        \"title\": \"Compliancy Level\",\n                                        \"value\": \"L1\"\n                                    },\n                                    {\n                                        \"title\": \"Last update\",\n                                        \"value\": \"2024-02-19\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ],\n                \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\"\n            }\n        },\n        {\n            \"type\": \"Action.OpenUrl\",\n            \"title\": \"Company Rules\",\n            \"url\": \"https://raw.githubusercontent.com/MassimoC/apimhotrod/main/governance/spectral-L1.oas.yaml\"\n        },\n        {\n            \"type\": \"Action.OpenUrl\",\n            \"title\": \"API Analysis Report\",\n            \"url\": \"https://portal.azure.com/#@codit.eu/resource/subscriptions/c1537527-c126-428d-8f72-1ac9f2c63c1f/resourceGroups/rg-apicenter/providers/Microsoft.ApiCenter/services/myapicatalog/analysis\"\n        },\n        {\n            \"type\": \"Action.ShowCard\",\n            \"title\": \"Assign Reviewer\",\n            \"card\": {\n                \"type\": \"AdaptiveCard\",\n                \"body\": [\n                    {\n                        \"type\": \"Input.Text\",\n                        \"id\": \"reviewerName\",\n                        \"placeholder\": \"Insert reviewer name (e.g. John Doe)\"\n                    }\n                ],\n                \"actions\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"Action.Submit\",\n\t\t\t\t\t\t\"title\": \"Assign\",\n\t\t\t\t\t\t\"data\" : { \n\t\t\t\t\t\t\t\t\"apiId\" : \"@{variables('apiId')}\", \n\t\t\t\t\t\t\t\t\"versionId\":\"@{variables('versionId')}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n                ]\n            }\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"version\": \"1.0\"\n}\n",
                            "recipient": {
                                "channelId": "19:e28eddaaa5b740f4ba4807ed9bc30bbe@thread.tacv2",
                                "groupId": "c72c6377-e016-4699-b5d2-b850777ab088"
                            },
                            "updateMessage": "Thanks for your response!"
                        },
                        "notificationUrl": "@{listCallbackUrl()}"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                        }
                    },
                    "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnectionWebhook"
            },
            "init_ReviewerName": {
                "inputs": {
                    "variables": [
                        {
                            "name": "initReviewer",
                            "type": "string",
                            "value": "@body('Parse_JSON')?['data']?['reviewerName']"
                        }
                    ]
                },
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "When_a_resource_event_occurs": {
                "inputs": {
                    "body": {
                        "properties": {
                            "destination": {
                                "endpointType": "webhook",
                                "properties": {
                                    "endpointUrl": "@{listCallbackUrl()}"
                                }
                            },
                            "filter": {
                                "includedEventTypes": [
                                    "Microsoft.ApiCenter.ApiDefinitionUpdated"
                                ]
                            },
                            "topic": "/subscriptions/c1537527-c126-428d-8f72-1ac9f2c63c1f/resourceGroups/rg-apicenter/providers/Microsoft.ApiCenter/services/myapicatalog"
                        }
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureeventgrid_1']['connectionId']"
                        }
                    },
                    "path": "/subscriptions/{topicSubscriptionId}/providers/@{encodeURIComponent('Microsoft.ApiCenter.Services')}/resource/eventSubscriptions",
                    "queries": {
                        "x-ms-api-version": "2017-09-15-preview"
                    }
                },
                "splitOn": "@triggerBody()",
                "type": "ApiConnectionWebhook"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azureeventgrid_1": {
                    "connectionId": "/subscriptions/c1537527-c126-428d-8f72-1ac9f2c63c1f/resourceGroups/rg-apicenter/providers/Microsoft.Web/connections/azureeventgrid",
                    "connectionName": "azureeventgrid",
                    "id": "/subscriptions/c1537527-c126-428d-8f72-1ac9f2c63c1f/providers/Microsoft.Web/locations/westeurope/managedApis/azureeventgrid"
                },
                "teams": {
                    "connectionId": "/subscriptions/c1537527-c126-428d-8f72-1ac9f2c63c1f/resourceGroups/rg-apicenter/providers/Microsoft.Web/connections/teams",
                    "connectionName": "teams",
                    "id": "/subscriptions/c1537527-c126-428d-8f72-1ac9f2c63c1f/providers/Microsoft.Web/locations/westeurope/managedApis/teams"
                }
            }
        }
    }
}