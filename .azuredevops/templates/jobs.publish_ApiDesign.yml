parameters:
  # Pipeline-related parameters
  poolName: '$(poolName)'
  vmImage: '$(vmImage)'
  defaultJobTimeoutInMinutes: 120
  serviceConnection: '$(serviceConnection)'
  # Logic-related parameters
  openApiFilePath: '$(openApiFullPath)'
  apiVersion: '$(apiVersion)'
  spectralRulesFullPath: '$(spectralRulesFullPath)'
  failSeverity: 'warn'

##---------------------------------------------##
## TEMPLATE LOGIC                              ##
##---------------------------------------------##
jobs:
  - job:
    displayName: Publish API Design to API Center
    timeoutInMinutes: ${{ parameters.defaultJobTimeoutInMinutes }}
    pool:
      ${{ if ne(parameters.vmImage, '') }}:
        vmImage: ${{ parameters.vmImage }}
      ${{ if ne(parameters.poolName, '') }}:
        name: ${{ parameters.poolName }}
    steps:
      - checkout: self

      - script: cat ${{ parameters.openApiFilePath }}
        continueOnError: true
        displayName: 'Show OpenAPI spec'

      - task: AzureCLI@2  
        displayName: Publish to API Center
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az apic api list -g rg-apicenter -s myapicatalog

      - task: AzureCLI@2  
        displayName: APIC - api create
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az apic api create -g rg-apicenter -s myapicatalog --name rocket-api --title "Rocket API" --kind rest --description "to the clouds and beyond"

      - task: AzureCLI@2  
        displayName: APIC - api version create
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az apic api version create -g rg-apicenter -s myapicatalog --api-name rocket-api --name "${{ parameters.apiVersion }}" --title "${{ parameters.apiVersion }}"

# az apic api create -g rg-apicenter -s myapicatalog --name rocket-api --title "Rocket API"

# az apic api version create -g api-center-test -s contosoeuap --api-name echo-api --name 2023-01-01 --title "2023-01-01"

# az apic api register -g rg-apicenter -s myapicatalog --api-location "${{ parameters.openApiFilePath }}" --environment-name public

