parameters:
  staticValidation: true
  publishDesign: true
  mocking: true
  defaultJobTimeoutInMinutes: 120
  apiName: ''
  apiTitle: ''
  apiDescription: ''
  currentApiVersion: ''

stages:
  - stage: validation
    displayName: Static validation
    condition: eq('${{ parameters.staticValidation }}', 'True')
    jobs:
      #- template: /.azuredevops/templates/jobs.pipelineVersion.yml
      - template: /.azuredevops/templates/jobs.API-validate.yml
        parameters:
          openApiFilePath: '$(openApiPath)'
          rulesetPath: '$(spectralRulesPath)'

  - stage: discovery
    displayName: Publish Open API design
    condition: and(eq('${{ parameters.publishDesign }}', 'True'), not(in(dependencies.validation.result, 'Failed', 'Canceled')))
    dependsOn:
      - validation
    jobs:
      - template: /.azuredevops/templates/jobs.API-publish.yml
        parameters:
          openApiFilePath: '$(openApiPath)'
          openApiUrl: '$(openApiUrl)'
          #currentApiVersion: $(Build.BuildNumber)
          currentApiVersion: '${{ parameters.currentApiVersion }}'
          apiName: '${{ parameters.apiName }}'
          apiTitle: '${{ parameters.apiTitle }}'
          apiDescription: '${{ parameters.apiDescription }}'

  - stage: mocking
    displayName: Publish to API Gateway
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('${{ parameters.mocking }}', 'True')))
    dependsOn:
      - validation
      - discovery
    jobs:
      - template: /.azuredevops/templates/jobs.API-mock.yml
        parameters:
          openApiFilePath: '$(openApiPath)'
          currentApiVersion: '${{ parameters.currentApiVersion }}'
          apiName: '${{ parameters.apiName }}'

  - stage: dev
    displayName: Development
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
    dependsOn:
      - mocking
      - discovery
    variables:
        apicVersionId: $[ stageDependencies.discovery.publishToApic.outputs['setOutputs.apicVersionId'] ]
    jobs:
      - template: /.azuredevops/templates/jobs.API-deploy.yml
        parameters:
          apiName: '${{ parameters.apiName }}'
          releaseDate: $(Build.BuildNumber)
          apiVersion: $(apicVersionId)
          environmentCode : 'development'
          lifecycleStage: 'development'

  - stage: tst
    displayName: Testing
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
    dependsOn:
      - dev
    jobs:
      - template: /.azuredevops/templates/jobs.API-deploy.yml
        parameters:
          apiName: '${{ parameters.apiName }}'
          releaseDate: $(Build.BuildNumber)
          apiVersion: '${{ parameters.currentApiVersion }}'
          environmentCode : 'testing'
          environmentId: 'tst001xyz'
          lifecycleStage: 'testing'

  - stage: stg
    displayName: Staging
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
    dependsOn:
      - tst
    jobs:
      - template: /.azuredevops/templates/jobs.API-deploy.yml
        parameters:
          apiName: '${{ parameters.apiName }}'
          releaseDate: $(Build.BuildNumber)
          apiVersion: '${{ parameters.currentApiVersion }}'
          environmentCode : 'staging'
          environmentId: 'acc001xyz'
          lifecycleStage: 'preview'

  - stage: prd
    displayName: Production
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
    dependsOn:
      - stg
    jobs:
      - template: /.azuredevops/templates/jobs.API-deploy.yml
        parameters:
          apiName: '${{ parameters.apiName }}'
          releaseDate: $(Build.BuildNumber)
          apiVersion: '${{ parameters.currentApiVersion }}'
          environmentCode : 'production'
          environmentId: 'prd001xyz'
          lifecycleStage: 'production'
